# ==========================================
# NestJS Application Environment Variables
# ==========================================
#
# 说明：
# 1. 复制此文件为 .env.development.local 开始开发
#    命令：cp .env.example .env.development.local
# 2. 不要直接修改此文件，它只是模板
# 3. 敏感信息（密码、密钥）不要提交到代码库
#
# ==========================================

# ------------------------------------------
# Application Configuration
# ------------------------------------------
# 运行环境：development | production | test
NODE_ENV=development

# 应用监听端口
PORT=3000

# ------------------------------------------
# Database Configuration (Prisma + PostgreSQL)
# ------------------------------------------
# PostgreSQL 连接字符串格式：
# postgresql://[用户名]:[密码]@[主机]:[端口]/[数据库名]?schema=public
#
# 示例：
# - 本地开发：postgresql://postgres:password@localhost:5432/myapp_dev?schema=public
# - Docker：postgresql://postgres:password@postgres:5432/myapp_dev?schema=public
# - 生产环境：添加 sslmode=require 参数
DATABASE_URL="postgresql://username:password@localhost:5432/database_name?schema=public"

# ------------------------------------------
# Redis Configuration (Caching)
# ------------------------------------------
# Redis 服务器地址
REDIS_HOST=localhost

# Redis 端口（默认 6379）
REDIS_PORT=6379

# Redis 密码（可选，本地开发通常为空）
REDIS_PASSWORD=

# Redis 数据库编号（0-15，默认 0）
# 建议：开发环境用 0，测试环境用 1，E2E 测试用 2
REDIS_DB=0

# ------------------------------------------
# Logging Configuration
# ------------------------------------------
# 日志级别：debug | info | warn | error
# 建议：开发环境用 debug，生产环境用 info 或 warn
LOG_LEVEL=debug

# ------------------------------------------
# Authentication (可选，如需实现认证功能)
# ------------------------------------------
# JWT 签名密钥（必须是随机生成的强密钥）
# 生成方法：node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
# JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# JWT 过期时间（示例：7d=7天, 24h=24小时, 60m=60分钟）
# JWT_EXPIRES_IN=7d

# ------------------------------------------
# API Configuration (可选)
# ------------------------------------------
# API 路径前缀（如：api/v1 则访问路径为 /api/v1/users）
# API_PREFIX=api/v1

# CORS 允许的源（逗号分隔，生产环境请限制为实际域名）
# CORS_ORIGIN=http://localhost:3000,http://localhost:3001

# ------------------------------------------
# Rate Limiting (可选)
# ------------------------------------------
# 请求频率限制窗口（秒）
# RATE_LIMIT_TTL=60

# 窗口内最大请求次数
# RATE_LIMIT_MAX=100

# ------------------------------------------
# File Upload (可选，如需文件上传功能)
# ------------------------------------------
# 文件上传大小限制（字节）
# MAX_FILE_SIZE=5242880

# 文件存储路径
# UPLOAD_DIR=./uploads

# ------------------------------------------
# External Services (可选，根据项目需要添加)
# ------------------------------------------
# 邮件服务 (Nodemailer)
# MAIL_HOST=smtp.gmail.com
# MAIL_PORT=587
# MAIL_USER=your-email@gmail.com
# MAIL_PASSWORD=your-app-password
# MAIL_FROM=noreply@yourdomain.com

# 云存储 (AWS S3)
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your-access-key
# AWS_SECRET_ACCESS_KEY=your-secret-key
# AWS_S3_BUCKET=your-bucket-name

# 第三方 API
# OPENAI_API_KEY=sk-your-openai-api-key
# STRIPE_SECRET_KEY=sk_test_your-stripe-key

